{"version":3,"sources":["assets/Scripts/Network/NetworkManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["\n// assets/Scripts/Network/NetworkManager.ts\n\nimport { _decorator, Component } from 'cc';\nimport { initializeApp } from 'firebase/app';\nimport { getDatabase, ref, onValue, set, update } from 'firebase/database';\nimport { getAuth, signInAnonymously, onAuthStateChanged } from 'firebase/auth';\n\nconst { ccclass } = _decorator;\n\n@ccclass('NetworkManager')\nexport class NetworkManager extends Component {\n    private firebaseConfig = {\n        apiKey: \"YOUR_API_KEY\",\n        authDomain: \"YOUR_PROJECT.firebaseapp.com\",\n        databaseURL: \"https://YOUR_PROJECT.firebaseio.com\",\n        projectId: \"YOUR_PROJECT\",\n        storageBucket: \"YOUR_PROJECT.appspot.com\",\n        messagingSenderId: \"YOUR_SENDER_ID\",\n        appId: \"YOUR_APP_ID\"\n    };\n\n    private app = null;\n    private db = null;\n    private auth = null;\n    private uid = '';\n    private roomId = 'room1';\n\n    onLoad() {\n        this.initFirebase();\n    }\n\n    initFirebase() {\n        this.app = initializeApp(this.firebaseConfig);\n        this.db = getDatabase(this.app);\n        this.auth = getAuth(this.app);\n\n        signInAnonymously(this.auth).then(() => {\n            console.log('🔐 Signed in anonymously');\n        });\n\n        onAuthStateChanged(this.auth, (user) => {\n            if (user) {\n                this.uid = user.uid;\n                this.joinRoom(this.roomId);\n            }\n        });\n    }\n\n    joinRoom(roomId: string) {\n        const playerRef = ref(this.db, `rooms/${roomId}/players/${this.uid}`);\n        set(playerRef, {\n            x: 0,\n            y: 0,\n            heldObject: null\n        });\n        console.log(`✅ Joined room: ${roomId}`);\n    }\n\n    syncPlayerPosition(x: number, y: number, heldObject: string | null = null) {\n        if (!this.uid) return;\n        const posRef = ref(this.db, `rooms/${this.roomId}/players/${this.uid}`);\n        update(posRef, { x, y, heldObject });\n    }\n\n    watchPlayers(callback: (data: any) => void) {\n        const playersRef = ref(this.db, `rooms/${this.roomId}/players`);\n        onValue(playersRef, (snapshot) => {\n            const data = snapshot.val();\n            callback(data);\n        });\n    }\n\n    getUid() {\n        return this.uid;\n    }\n}\n"]}