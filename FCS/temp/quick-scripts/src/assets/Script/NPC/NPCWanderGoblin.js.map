{"version":3,"sources":["assets/Script/NPC/NPCWanderGoblin.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAM,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAA6C,mCAAY;IAAzD;QAAA,qEA8CC;QA5CG,cAAQ,GAAW,EAAE,CAAC;QAGtB,cAAQ,GAAW,EAAE,CAAC;QAGtB,UAAI,GAAiB,IAAI,CAAC;QAElB,SAAG,GAAY,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC3B,WAAK,GAAW,CAAC,CAAC;QAClB,QAAE,GAAiB,IAAI,CAAC;;IAkCpC,CAAC;IAhCG,+BAAK,GAAL;QACI,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;QAC1C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,aAAa;QAC7E,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC/B,CAAC;IAED,6CAAmB,GAAnB;QACI,IAAM,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;QAC1C,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;QAC/D,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;QAE7E,IAAI,IAAI,CAAC,IAAI;YAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IAChD,CAAC;IAED,gCAAM,GAAN,UAAO,EAAU;QACb,IAAI,IAAI,CAAC,EAAE,EAAE;YACT,IAAI,CAAC,EAAE,CAAC,cAAc,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAElD,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;gBAC7C,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aAC9C;SACJ;IACL,CAAC;IAGD,wCAAc,GAAd,UAAe,OAAO,EAAE,YAAY,EAAE,aAAa;QAC/C,IAAI,aAAa,CAAC,IAAI,CAAC,IAAI,KAAK,cAAc,EAAE;YAC5C,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACvB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;YACf,IAAI,IAAI,CAAC,IAAI;gBAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;SAChD;IACL,CAAC;IA3CD;QADC,QAAQ;qDACa;IAGtB;QADC,QAAQ;qDACa;IAGtB;QADC,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC;iDACG;IART,eAAe;QADnC,OAAO;OACa,eAAe,CA8CnC;IAAD,sBAAC;CA9CD,AA8CC,CA9C4C,EAAE,CAAC,SAAS,GA8CxD;kBA9CoB,eAAe","file":"","sourceRoot":"/","sourcesContent":["const { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class NPCWanderGoblin extends cc.Component {\n    @property\n    minSpeed: number = 30;\n\n    @property\n    maxSpeed: number = 40;\n\n    @property(cc.Animation)\n    anim: cc.Animation = null;\n\n    private dir: cc.Vec2 = cc.v2(0, 0);\n    private speed: number = 0;\n    private rb: cc.RigidBody = null;\n\n    start() {\n        this.rb = this.getComponent(cc.RigidBody);\n        this.schedule(this.pickRandomDirection, Math.random() * 2 + 1); // 每 1~3 秒換方向\n        this.pickRandomDirection();\n    }\n\n    pickRandomDirection() {\n        const angle = Math.random() * Math.PI * 2;\n        this.dir = cc.v2(Math.cos(angle), Math.sin(angle)).normalize();\n        this.speed = this.minSpeed + Math.random() * (this.maxSpeed - this.minSpeed);\n\n        if (this.anim) this.anim.play(\"goblin_run\");\n    }\n\n    update(dt: number) {\n        if (this.rb) {\n            this.rb.linearVelocity = this.dir.mul(this.speed);\n\n            if (Math.abs(this.dir.x) > Math.abs(this.dir.y)) {\n                this.node.scaleX = this.dir.x > 0 ? 1 : -1;\n            }\n        }\n    }\n\n\n    onBeginContact(contact, selfCollider, otherCollider) {\n        if (otherCollider.node.name === \"DeskCollider\") {\n            this.dir = cc.v2(0, 0);\n            this.speed = 0;\n            if (this.anim) this.anim.play(\"goblin_idle\");\n        }\n    }\n}\n"]}