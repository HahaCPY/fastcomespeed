{"version":3,"sources":["assets/Script/NPC/NPCWanderCatty.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,oBAAoB;AACd,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAA4C,kCAAY;IAAxD;QAAA,qEAmCC;QAjCG,UAAI,GAAiB,IAAI,CAAC;QAG1B,WAAK,GAAW,EAAE,CAAC;QAEX,eAAS,GAAY,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACjC,6BAAuB,GAAW,CAAC,CAAC;;IA2BhD,CAAC;IAzBG,8BAAK,GAAL;QACI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,uBAAuB,CAAC,CAAC;QACnE,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;IAC9B,CAAC;IAED,+BAAM,GAAN,UAAO,EAAU;QACb,IAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,SAAS,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC;QACzE,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;QAE7D,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC,SAAS,EAAE;YACnD,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;SAC5B;IACL,CAAC;IAED,yCAAgB,GAAhB;QACI,IAAM,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC;QAC1C,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;QACzD,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACtD,CAAC;IAED,iCAAQ,GAAR,UAAS,IAAY;QACjB,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE;YAChD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACxB;IACL,CAAC;IAhCD;QADC,QAAQ,CAAC,EAAE,IAAI,EAAE,EAAE,CAAC,SAAS,EAAE,CAAC;gDACP;IAG1B;QADC,QAAQ;iDACU;IALF,cAAc;QADlC,OAAO;OACa,cAAc,CAmClC;IAAD,qBAAC;CAnCD,AAmCC,CAnC2C,EAAE,CAAC,SAAS,GAmCvD;kBAnCoB,cAAc","file":"","sourceRoot":"/","sourcesContent":["// NPCWanderCatty.ts\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class NPCWanderCatty extends cc.Component {\n    @property({ type: cc.Animation })\n    anim: cc.Animation = null;\n\n    @property\n    speed: number = 50;\n\n    private direction: cc.Vec2 = cc.v2(1, 0);\n    private changeDirectionInterval: number = 2;\n\n    start() {\n        this.schedule(this.pickNewDirection, this.changeDirectionInterval);\n        this.playAnim(\"cat_idle\");\n    }\n\n    update(dt: number) {\n        const movement = this.direction.clone().normalize().mul(this.speed * dt);\n        this.node.setPosition(this.node.getPosition().add(movement));\n\n        if (!this.anim.getAnimationState(\"cat_run\").isPlaying) {\n            this.playAnim(\"cat_run\");\n        }\n    }\n\n    pickNewDirection() {\n        const angle = Math.random() * 2 * Math.PI;\n        this.direction = cc.v2(Math.cos(angle), Math.sin(angle));\n        this.node.scaleX = this.direction.x >= 0 ? 1 : -1;\n    }\n\n    playAnim(name: string) {\n        if (this.anim && this.anim.getAnimationState(name)) {\n            this.anim.play(name);\n        }\n    }\n}"]}