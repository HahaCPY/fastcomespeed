{"version":3,"sources":["assets/Script/scene/ScorePersist.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;IAA0C,gCAAY;IAAtD;QAAA,qEA+CC;QA9CU,WAAK,GAAW,CAAC,CAAC;QAClB,eAAS,GAAW,EAAE,CAAC;QACvB,YAAM,GAAW,EAAE,CAAC,CAAC,mBAAmB;;IA4CnD,CAAC;IA1CG,6BAAM,GAAN;QACI,EAAE,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,UAAU;IACrD,CAAC;IAED;;;;OAIG;IACG,0CAAmB,GAAzB,UAA0B,QAAgB;;uCAAG,OAAO;;;;;wBAChD,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;4BACd,EAAE,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;4BAC9B,sBAAO,KAAK,EAAC;yBAChB;wBAEK,EAAE,GAAG,QAAQ,CAAC,QAAQ,EAAE,CAAC;wBACzB,QAAQ,GAAG,EAAE,CAAC,GAAG,CAAC,YAAU,IAAI,CAAC,MAAQ,CAAC,CAAC;;;;wBAI5B,qBAAM,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,EAAA;;wBAAvC,QAAQ,GAAG,SAA4B;wBACvC,IAAI,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC;wBACtB,QAAQ,SAAG,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,KAAK,mCAAI,CAAC,CAAC;6BAG9B,CAAA,QAAQ,GAAG,QAAQ,CAAA,EAAnB,wBAAmB;wBACnB,cAAc;wBACd,qBAAM,QAAQ,CAAC,GAAG,CAAC;gCACf,KAAK,EAAE,QAAQ;gCACf,KAAK,EAAE,IAAI,CAAC,SAAS;gCACrB,SAAS,EAAE,IAAI,CAAC,GAAG,EAAE;6BACxB,CAAC,EAAA;;wBALF,cAAc;wBACd,SAIE,CAAC;wBACH,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,CAAC,QAAQ;wBAC/B,sBAAO,IAAI,EAAC;;oBAEhB,UAAU;oBACV,sBAAO,KAAK,EAAC;;;wBAEb,EAAE,CAAC,KAAK,CAAC,sBAAsB,EAAE,KAAG,CAAC,CAAC;wBACtC,sBAAO,KAAK,EAAC;;;;;KAEpB;IACL,mBAAC;AAAD,CA/CA,AA+CC,CA/CyC,EAAE,CAAC,SAAS,GA+CrD","file":"","sourceRoot":"/","sourcesContent":["export default class ScorePersist extends cc.Component {\n    public score: number = 0;\n    public fromScene: string = \"\";\n    public userId: string = \"\"; // 建議設一個唯一 user key\n\n    onLoad() {\n        cc.game.addPersistRootNode(this.node); // 場景切換不移除\n    }\n\n    /**\n     * 檢查分數，必要時寫入 Firebase Realtime Database\n     * @param newScore 新分數\n     * @returns 寫入狀態\n     */\n    async updateScoreIfHigher(newScore: number): Promise<boolean> {\n        if (!this.userId) {\n            cc.warn(\"userId 尚未設定，無法同步分數\");\n            return false;\n        }\n\n        const db = firebase.database();\n        const scoreRef = db.ref(`scores/${this.userId}`);\n\n        try {\n            // 取得舊分數\n            const snapshot = await scoreRef.once(\"value\");\n            const data = snapshot.val();\n            const oldScore = data?.score ?? 0;\n\n            // 比較\n            if (newScore > oldScore) {\n                // 只要新分數比較高才寫入\n                await scoreRef.set({\n                    score: newScore,\n                    scene: this.fromScene,\n                    updatedAt: Date.now()\n                });\n                this.score = newScore; // 本地也更新\n                return true;\n            }\n            // 沒更高，不寫入\n            return false;\n        } catch (err) {\n            cc.error(\"🔥 Firebase 資料庫讀寫失敗：\", err);\n            return false;\n        }\n    }\n}\n"]}