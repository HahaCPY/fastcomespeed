{"version":3,"sources":["assets/Script/script/PlayerModeSelector.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAM,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAAgD,sCAAY;IAA5D;QAAA,qEAsCC;QAjCG,YAAM,GAAY,IAAI,CAAC;QAGvB,iBAAW,GAAY,IAAI,CAAC;;IA8BhC,CAAC;2BAtCoB,kBAAkB;IAUzB,mCAAM,GAAhB;QACI,oBAAkB,CAAC,WAAW,GAAG,CAAC,CAAC;QACnC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,eAAe;QAC3C,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,KAAK,CAAC;IACpC,CAAC;IAED,qCAAqC;IACrC,iDAAoB,GAApB,UAAqB,MAAiB;QAClC,8CAA8C;QAC9C,4BAA4B;QAC5B,IAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;QAC7D,kBAAkB;QAClB,IAAM,WAAW,GAAG,OAAO,CAAC,SAAS,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,SAAS,EAAX,CAAW,CAAC,CAAC;QAExD,yCAAyC;QACzC,IAAI,WAAW,KAAK,CAAC,EAAE;YACnB,oBAAkB,CAAC,WAAW,GAAG,CAAC,CAAC;YACnC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;YACvB,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,eAAe;YAC3C,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,oBAAoB;SACxD;aAAM;YACH,oBAAkB,CAAC,WAAW,GAAG,CAAC,CAAC;YACnC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC,eAAe;YAC1C,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC,oBAAoB;YACpD,OAAO,CAAC,GAAG,CAAC,oCAAoC,CAAC,CAAC;SACrD;QACD,EAAE,CAAC,GAAG,CAAC,cAAc,EAAE,oBAAkB,CAAC,WAAW,CAAC,CAAC;IAC3D,CAAC;;IApCD,OAAO;IACO,8BAAW,GAAW,CAAC,CAAC;IAGtC;QADE,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;sDACI;IAGvB;QADE,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;2DACS;IARX,kBAAkB;QADtC,OAAO;OACa,kBAAkB,CAsCtC;IAAD,yBAAC;CAtCD,AAsCC,CAtC+C,EAAE,CAAC,SAAS,GAsC3D;kBAtCoB,kBAAkB","file":"","sourceRoot":"/","sourcesContent":["const { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class PlayerModeSelector extends cc.Component {\n    // 全域變數\n    public static player_mode: number = 0;\n\n     @property(cc.Node)\n    player: cc.Node = null;\n\n     @property(cc.Node)\n    char_select: cc.Node = null;\n\n    protected onLoad(): void {\n        PlayerModeSelector.player_mode = 0;\n        this.player.active = false; // 隱藏 player 節點\n        this.char_select.active = false;\n    }\n\n    // 這個函式直接設為 ToggleGroup 的 checkEvents\n    onToggleGroupChanged(toggle: cc.Toggle) {\n        //console.log(\"ToggleGroup changed:\", toggle);\n        // 取得 ToggleGroup 下所有 Toggle\n        const toggles = this.node.getComponentsInChildren(cc.Toggle);\n        // 找到目前被選中的 Toggle\n        const selectedIdx = toggles.findIndex(t => t.isChecked);\n\n        // 你要的是：toggle 0 或 2 被選中時，player_mode = 1\n        if (selectedIdx === 0) {\n            PlayerModeSelector.player_mode = 0;\n            console.log(\"選擇了單人模式\");\n            this.player.active = false; // 隱藏 player 節點\n            this.char_select.active = false; // 顯示 char_select 節點\n        } else {\n            PlayerModeSelector.player_mode = 1;\n            this.player.active = true; // 顯示 player 節點\n            this.char_select.active = true; // 隱藏 char_select 節點\n            console.log(\"PlayerModeSelector.player_mode = 0\");\n        }\n        cc.log(\"player_mode:\", PlayerModeSelector.player_mode);\n    }\n}"]}