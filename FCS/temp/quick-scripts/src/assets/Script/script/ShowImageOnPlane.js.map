{"version":3,"sources":["assets/Script/script/ShowImageOnPlane.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,sBAAsB;AAChB,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAA8C,oCAAY;IAA1D;QAAA,qEAmCC;QAjCG,aAAO,GAAiB,IAAI,CAAC;;IAiCjC,CAAC;IA/BG,gCAAK,GAAL;QAAA,iBAaC;QAZG,aAAa;QACb,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACf,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,sBAAsB,EAAE,EAAE,CAAC,SAAS,EAAE,UAAC,GAAG,EAAE,GAAiB;gBAC3E,IAAI,GAAG,EAAE;oBACL,EAAE,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;oBACxB,OAAO;iBACV;gBACD,KAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;YAC3B,CAAC,CAAC,CAAC;SACN;aAAM;YACH,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SACnC;IACL,CAAC;IAED,uCAAY,GAAZ,UAAa,GAAiB;QAC1B,IAAM,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC;QAC7D,IAAI,CAAC,YAAY,EAAE;YACf,EAAE,CAAC,KAAK,CAAC,wBAAwB,CAAC,CAAC;YACnC,OAAO;SACV;QACD,OAAO;QACP,IAAM,QAAQ,GAAG,YAAY,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;QAC7C,IAAI,CAAC,QAAQ,EAAE;YACX,EAAE,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAAC;YAC/B,OAAO;SACV;QACD,6BAA6B;QAC7B,QAAQ,CAAC,WAAW,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;QACrC,YAAY,CAAC,WAAW,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;IAC1C,CAAC;IAhCD;QADC,QAAQ,CAAC,EAAE,IAAI,EAAE,EAAE,CAAC,SAAS,EAAE,CAAC;qDACJ;IAFZ,gBAAgB;QADpC,OAAO;OACa,gBAAgB,CAmCpC;IAAD,uBAAC;CAnCD,AAmCC,CAnC6C,EAAE,CAAC,SAAS,GAmCzD;kBAnCoB,gBAAgB","file":"","sourceRoot":"/","sourcesContent":["// ShowImageOnPlane.ts\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class ShowImageOnPlane extends cc.Component {\n    @property({ type: cc.Texture2D })\n    texture: cc.Texture2D = null;\n\n    start() {\n        // 若未指定，則動態加載\n        if (!this.texture) {\n            cc.loader.loadRes(\"background/brickWall\", cc.Texture2D, (err, tex: cc.Texture2D) => {\n                if (err) {\n                    cc.error(\"載入圖片失敗\", err);\n                    return;\n                }\n                this.applyTexture(tex);\n            });\n        } else {\n            this.applyTexture(this.texture);\n        }\n    }\n\n    applyTexture(tex: cc.Texture2D) {\n        const meshRenderer = this.node.getComponent(cc.MeshRenderer);\n        if (!meshRenderer) {\n            cc.error(\"本節點沒有 MeshRenderer 組件！\");\n            return;\n        }\n        // 取得材質\n        const material = meshRenderer.getMaterial(0);\n        if (!material) {\n            cc.error(\"MeshRenderer 沒有材質！\");\n            return;\n        }\n        // 設定貼圖，Unlit 材質屬性名稱是 texture\n        material.setProperty(\"texture\", tex);\n        meshRenderer.setMaterial(0, material);\n    }\n}\n"]}