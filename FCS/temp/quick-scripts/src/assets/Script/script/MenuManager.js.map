{"version":3,"sources":["assets\\Script\\script\\MenuManager.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,+CAA0C;AAEpC,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAAyC,+BAAY;IAArD;QAAA,qEA2CC;QAzCG,SAAG,GAAiB,IAAI,CAAC;QAGzB,eAAS,GAAY,IAAI,CAAC;QAG1B,eAAS,GAAY,IAAI,CAAC;QAElB,gBAAU,GAAW,CAAC,CAAC,CAAC;;IAiCpC,CAAC;IA/BG,2BAAK,GAAL;QACI,gBAAgB;QAChB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,sBAAY,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC;QAE5F,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,yFAAyF;YACzF,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,CAAC;SAC1F;QACD,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,yFAAyF;YACzF,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,CAAC;SAC1F;IACL,CAAC;IAED,wCAAkB,GAAlB,UAAmB,MAAiB;QAChC,sBAAY,CAAC,WAAW,EAAE,CAAC,SAAS,GAAG,MAAM,CAAC,QAAQ,CAAC;QACvD,IAAI,IAAI,CAAC,UAAU,KAAK,CAAC,CAAC,EAAE;YACxB,EAAE,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC;SAC9D;IACL,CAAC;IAED,wCAAkB,GAAlB,UAAmB,MAAiB;QAChC,sBAAY,CAAC,WAAW,EAAE,CAAC,SAAS,GAAG,MAAM,CAAC,QAAQ,CAAC;QACvD,EAAE,CAAC,WAAW,CAAC,gBAAgB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;IACrD,CAAC;IAED,+BAAS,GAAT;QACI,IAAI,IAAI,CAAC,UAAU,KAAK,CAAC,CAAC,EAAE;YACxB,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SACxC;IACL,CAAC;IAxCD;QADC,QAAQ,CAAC,EAAE,IAAI,EAAE,EAAE,CAAC,SAAS,EAAE,CAAC;4CACR;IAGzB;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;kDACQ;IAG1B;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;kDACQ;IART,WAAW;QAD/B,OAAO;OACa,WAAW,CA2C/B;IAAD,kBAAC;CA3CD,AA2CC,CA3CwC,EAAE,CAAC,SAAS,GA2CpD;kBA3CoB,WAAW","file":"","sourceRoot":"/","sourcesContent":["import AudioManager from \"./AudioManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class MenuManager extends cc.Component {\r\n    @property({ type: cc.AudioClip })\r\n    bgm: cc.AudioClip = null;\r\n\r\n    @property(cc.Node)\r\n    bgmSlider: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    sfxSlider: cc.Node = null;\r\n\r\n    private bgmAudioId: number = -1;\r\n\r\n    start() {\r\n        // 播放 BGM，使用全域音量\r\n        this.bgmAudioId = cc.audioEngine.play(this.bgm, true, AudioManager.getInstance().bgmVolume);\r\n\r\n        if (this.bgmSlider) {\r\n            //this.bgmSlider.getComponent(cc.Slider).progress = AudioManager.getInstance().bgmVolume;\r\n            this.bgmSlider.getComponent(cc.Slider).node.on('slide', this.onBgmSliderChanged, this);\r\n        }\r\n        if (this.sfxSlider) {\r\n            //this.sfxSlider.getComponent(cc.Slider).progress = AudioManager.getInstance().sfxVolume;\r\n            this.sfxSlider.getComponent(cc.Slider).node.on('slide', this.onSfxSliderChanged, this);\r\n        }\r\n    }\r\n\r\n    onBgmSliderChanged(slider: cc.Slider) {\r\n        AudioManager.getInstance().bgmVolume = slider.progress;\r\n        if (this.bgmAudioId !== -1) {\r\n            cc.audioEngine.setVolume(this.bgmAudioId, slider.progress);\r\n        }\r\n    }\r\n\r\n    onSfxSliderChanged(slider: cc.Slider) {\r\n        AudioManager.getInstance().sfxVolume = slider.progress;\r\n        cc.audioEngine.setEffectsVolume(slider.progress);\r\n    }\r\n\r\n    onDestroy() {\r\n        if (this.bgmAudioId !== -1) {\r\n            cc.audioEngine.stop(this.bgmAudioId);\r\n        }\r\n    }\r\n}"]}