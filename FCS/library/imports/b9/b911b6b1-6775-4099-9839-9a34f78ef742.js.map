{"version":3,"sources":["assets\\Script\\script\\select\\vehicleCtrl.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["const { ccclass, property } = cc._decorator;\r\nimport PositionManager from \"./PositionManager\";\r\n\r\n@ccclass\r\nexport default class CharacterController extends cc.Component {\r\n    @property\r\n    speed: number = 3;\r\n\r\n    private rb: cc.RigidBody3D = null;\r\n\r\n    onLoad() {\r\n        this.rb = this.getComponent(cc.RigidBody3D);\r\n\r\n        const fromMenu = cc.sys.localStorage.getItem(\"fromMenu\") === \"true\";\r\n\r\n        // if the character has a saved position, set it\r\n        const saved = fromMenu ? null : PositionManager.getSavedPosition();\r\n        if (saved) {\r\n            this.node.setPosition(saved);\r\n            PositionManager.clear();\r\n        }\r\n\r\n        // REMEMBER TO REMOVE THE FLAG\r\n        cc.sys.localStorage.removeItem(\"fromMenu\");\r\n\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\r\n    }\r\n\r\n    start() {\r\n        console.log(\"character's forward: \", this.node.forward);\r\n    }\r\n\r\n    onDestroy() {\r\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\r\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\r\n    }\r\n\r\n    private velocity = cc.v3();\r\n\r\n    private onKeyDown(event: cc.Event.EventKeyboard) {\r\n        if (event.keyCode === cc.macro.KEY.a) this.velocity.x = -this.speed;\r\n        if (event.keyCode === cc.macro.KEY.d) this.velocity.x = this.speed;\r\n        if (event.keyCode === cc.macro.KEY.w) this.velocity.z = -this.speed;\r\n        if (event.keyCode === cc.macro.KEY.s) this.velocity.z = this.speed;\r\n    }\r\n\r\n    private onKeyUp(event: cc.Event.EventKeyboard) {\r\n        if (event.keyCode === cc.macro.KEY.a || event.keyCode === cc.macro.KEY.d) this.velocity.x = 0;\r\n        if (event.keyCode === cc.macro.KEY.w || event.keyCode === cc.macro.KEY.s) this.velocity.z = 0;\r\n    }\r\n\r\n    update(dt: number) {\r\n        if (this.rb) {\r\n            this.rb.setLinearVelocity(this.velocity);\r\n\r\n            if (!this.velocity.equals(cc.Vec3.ZERO)) {\r\n                // dir = the direction that character should face\r\n                const dir = this.velocity.clone().normalize();\r\n\r\n                // targetQuat = the target rotation quaternion\r\n                // it can make the character face the direction of movement\r\n                const targetQuat = new cc.Quat();\r\n                cc.Quat.fromViewUp(targetQuat, dir, cc.Vec3.UP);\r\n\r\n                // make the rotation smooth\r\n                const currentQuat = new cc.Quat();\r\n                this.node.getRotation(currentQuat);\r\n                const smoothedQuat = new cc.Quat();\r\n                cc.Quat.slerp(smoothedQuat, currentQuat, targetQuat, dt * 10);\r\n\r\n                // set the smoothed rotation to the node\r\n                this.node.setRotation(smoothedQuat);\r\n            }\r\n        }\r\n    }\r\n}"]}