{"version":3,"sources":["assets\\Script\\script\\Signup.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["const {ccclass, property} = cc._decorator;\r\nimport FirebaseManager from './FirebaseManager';\r\n \r\n@ccclass\r\nexport default class Signup extends cc.Component {\r\n    private firebaseManager: FirebaseManager = null;\r\n\r\n    start() {\r\n        console.log(\"Signup component started\");\r\n        // 使用新的方式獲取 FirebaseManager 實例\r\n        this.firebaseManager = FirebaseManager.getFirebaseManager();\r\n        if (!this.firebaseManager.isFirebaseInitialized()) {\r\n            console.error(\"Firebase not initialized!\");\r\n            return;\r\n        }\r\n\r\n        let continueButton = new cc.Component.EventHandler();\r\n        continueButton.target = this.node;\r\n        continueButton.component = \"Signup\";\r\n        continueButton.handler = \"onSignUp\";\r\n        \r\n        cc.find(\"Canvas/Signup/Submit\").getComponent(cc.Button).clickEvents.push(continueButton);\r\n    }\r\n\r\n    onSignUp() {\r\n        \r\n        const email = cc.find(\"Canvas/Signup/Email\").getComponent(cc.EditBox).string;\r\n        const password = cc.find(\"Canvas/Signup/Password\").getComponent(cc.EditBox).string;\r\n        const nickname = cc.find(\"Canvas/Signup/Nickname\").getComponent(cc.EditBox).string;\r\n\r\n        console.log(email, password, nickname);\r\n        // 檢查輸入是否為空\r\n\r\n        if (!email || !password || !nickname) {\r\n            alert(\"請填寫所有欄位\");\r\n            return;\r\n        }\r\n\r\n        // 使用 FirebaseManager 進行註冊\r\n        this.firebaseManager.getAuth().createUserWithEmailAndPassword(email, password)\r\n            .then((userCredential) => {\r\n                // 保存用戶數據到 Realtime Database\r\n                const userId = userCredential.user.uid;\r\n                return this.firebaseManager.getDatabase().ref('users/' + userId).set({\r\n                    nickname: nickname,\r\n                    email: email\r\n                });\r\n            })\r\n            .then(() => {\r\n                console.log('註冊成功');\r\n                alert(\"註冊成功\");\r\n                cc.director.loadScene(\"Loading\");\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"註冊錯誤:\", error);\r\n                alert(error.message);\r\n                //alert(this.getErrorMessage(error.code));\r\n            });\r\n            \r\n    }\r\n\r\n    private getErrorMessage(errorCode: string): string {\r\n        switch (errorCode) {\r\n            case 'auth/invalid-email':\r\n                return '無效的電子郵件地址';\r\n            case 'auth/email-already-in-use':\r\n                return '此電子郵件已被使用';\r\n            case 'auth/weak-password':\r\n                return '密碼強度太弱';\r\n            default:\r\n                return '註冊失敗，請稍後再試';\r\n        }\r\n    }\r\n}\r\n"]}