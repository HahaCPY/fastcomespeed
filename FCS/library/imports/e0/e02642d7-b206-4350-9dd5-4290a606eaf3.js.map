{"version":3,"sources":["assets\\Script\\NPC\\GoblinController.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["const { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class GoblinController extends cc.Component {\r\n    @property(cc.Animation)\r\n    anim: cc.Animation = null;\r\n\r\n    @property(cc.Node)\r\n    girl1: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    girl2: cc.Node = null;\r\n\r\n    @property\r\n    speed: number = 15;\r\n\r\n    private rb: cc.RigidBody = null;\r\n    private state: string = \"idle\";\r\n    private followTimer: number = 0;\r\n    private followThreshold: number = 7; // 秒數\r\n    private deskContactTimer: number = 0;\r\n    private inDeskContact: boolean = false;\r\n    private currentAnim: string = \"\";\r\n\r\n    onLoad() {\r\n        this.rb = this.getComponent(cc.RigidBody);\r\n        this.state = \"walk\";\r\n        this.playAnim(\"goblin_run\");\r\n    }\r\n\r\n    setTargetPlayers(girl1: cc.Node, girl2: cc.Node) {\r\n        this.girl1 = girl1;\r\n        this.girl2 = girl2;\r\n    }\r\n\r\n    update(dt: number) {\r\n        if (this.state === \"dead\") return;\r\n\r\n        const player1 = this.girl1?.position;\r\n        const player2 = this.girl2?.position;\r\n\r\n        const target = player1 && player2\r\n            ? (this.node.position.sub(player1).mag() < this.node.position.sub(player2).mag() ? player1 : player2)\r\n            : player1 || player2;\r\n\r\n        if (target && this.state !== \"idle\") {\r\n            const distance = this.node.position.sub(target).mag();\r\n\r\n            if (distance < 150) {\r\n                this.followTimer += dt;\r\n            } else {\r\n                this.followTimer = 0;\r\n            }\r\n\r\n            this.moveTowards(target, dt);\r\n            this.playAnim(\"goblin_run\");\r\n\r\n            if (this.followTimer > this.followThreshold) {\r\n                this.die();\r\n            }\r\n        }\r\n\r\n        if (this.inDeskContact) {\r\n            this.deskContactTimer += dt;\r\n            if (this.deskContactTimer > 4 && this.state !== \"idle\") {\r\n                this.state = \"idle\";\r\n                this.playAnim(\"goblin_idle\");\r\n            }\r\n        } else {\r\n            this.deskContactTimer = 0;\r\n        }\r\n    }\r\n\r\n    moveTowards(target: cc.Vec3, dt: number) {\r\n        let dir = target.sub(this.node.position);\r\n        dir.y -= 30; // 偏下方\r\n        dir = dir.normalize();\r\n\r\n        this.node.x += dir.x * this.speed * dt;\r\n        this.node.y += dir.y * this.speed * dt;\r\n\r\n         if (Math.abs(dir.x) > 0.1) {\r\n            this.node.scaleX = dir.x > 0 ? 0.8 : -0.8;\r\n        }\r\n    }\r\n\r\n    die() {\r\n        if (this.state === \"dead\") return;\r\n\r\n        this.state = \"dead\";\r\n        this.inDeskContact = false;\r\n        this.unscheduleAllCallbacks();\r\n\r\n        this.playAnim(\"goblin_die\");\r\n\r\n        this.anim.once(\"finished\", this.onDieAnimationFinished, this);\r\n    }\r\n\r\n    onDieAnimationFinished() {\r\n        this.node.destroy();\r\n    }\r\n\r\n    playAnim(name: string) {\r\n        if (!this.anim || this.currentAnim === name) return;\r\n\r\n        const state = this.anim.getAnimationState(name);\r\n        if (state) {\r\n            this.anim.play(name);\r\n            this.currentAnim = name;\r\n        }\r\n    }\r\n\r\n    onBeginContact(contact, self, other) {\r\n        if (other.node.name === \"DeskCollider\") {\r\n            this.inDeskContact = true;\r\n        }\r\n    }\r\n\r\n    onEndContact(contact, self, other) {\r\n        if (other.node.name === \"DeskCollider\") {\r\n            this.inDeskContact = false;\r\n            this.deskContactTimer = 0;\r\n        }\r\n    }\r\n}\r\n"]}