{"version":3,"sources":["assets/Script/Player/KeyboardControls.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { IInputControls } from \"./IInputControls\";\n\nexport class KeyboardControls implements IInputControls {\n    private moveDir: cc.Vec2 = cc.v2(0, 0);\n    private isInteractPressed: boolean = false;\n    private isChopPressed: boolean = false;\n    private isChopHeld: boolean = false;\n\n    constructor() {\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n    }\n\n    getMoveDirection(): cc.Vec2 {\n        return this.moveDir;\n    }\n\n    private onKeyDown(event: cc.Event.EventKeyboard) {\n        switch (event.keyCode) {\n            case cc.macro.KEY.w:\n            case cc.macro.KEY.up:\n                this.moveDir.y = 1;\n                break;\n            case cc.macro.KEY.s:\n            case cc.macro.KEY.down:\n                this.moveDir.y = -1;\n                break;\n            case cc.macro.KEY.a:\n            case cc.macro.KEY.left:\n                this.moveDir.x = -1;\n                break;\n            case cc.macro.KEY.d:\n            case cc.macro.KEY.right:\n                this.moveDir.x = 1;\n                break;\n            case cc.macro.KEY.e:\n                this.isInteractPressed = true;\n                break;\n            case cc.macro.KEY.space:\n                this.isChopHeld = true;\n                break;\n        }\n    }\n\n    private onKeyUp(event: cc.Event.EventKeyboard) {\n        switch (event.keyCode) {\n            case cc.macro.KEY.w:\n            case cc.macro.KEY.up:\n            case cc.macro.KEY.s:\n            case cc.macro.KEY.down:\n                this.moveDir.y = 0;\n                break;\n            case cc.macro.KEY.a:\n            case cc.macro.KEY.left:\n            case cc.macro.KEY.d:\n            case cc.macro.KEY.right:\n                this.moveDir.x = 0;\n                break;\n            case cc.macro.KEY.e:\n                this.isInteractPressed = false;\n                break;\n            case cc.macro.KEY.space:\n                this.isChopHeld = false;\n                break;\n        }\n    }\n\n    public getInteractPressed(): boolean {\n        return this.isInteractPressed;\n    }\n    public getChopPressed(): boolean {\n        return this.isChopHeld;\n    }\n\n}\n"]}