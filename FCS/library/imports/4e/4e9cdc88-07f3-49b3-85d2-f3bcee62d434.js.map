{"version":3,"sources":["assets\\Script\\NPC\\GoblinSpawner.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,uDAAkD,CAAC,aAAa;AAE1D,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAA2C,iCAAY;IAAvD;QAAA,qEAyCC;QAvCG,kBAAY,GAAc,IAAI,CAAC;QAG/B,gBAAU,GAAc,EAAE,CAAC;QAG3B,aAAO,GAAY,IAAI,CAAC;QAGxB,aAAO,GAAY,IAAI,CAAC;QAGxB,mBAAa,GAAW,CAAC,CAAC;QAElB,WAAK,GAAW,CAAC,CAAC;;IAyB9B,CAAC;IAvBG,8BAAM,GAAN,UAAO,EAAU;QACb,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC;QACjB,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,aAAa,EAAE;YAClC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;YACf,IAAI,CAAC,WAAW,EAAE,CAAC;SACtB;IACL,CAAC;IAED,mCAAW,GAAX;QACI,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,KAAK,CAAC;YAAE,OAAO;QAE/D,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QACjE,IAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAEzC,IAAM,MAAM,GAAG,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACjD,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC;QAC5C,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC;QAE1B,IAAM,UAAU,GAAG,MAAM,CAAC,YAAY,CAAC,0BAAgB,CAAC,CAAC;QACzD,IAAI,UAAU,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,EAAE;YAC5C,UAAU,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;SAC3D;IACL,CAAC;IAtCD;QADC,QAAQ,CAAC,EAAE,IAAI,EAAE,EAAE,CAAC,MAAM,EAAE,CAAC;uDACC;IAG/B;QADC,QAAQ,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC;qDACH;IAG3B;QADC,QAAQ,CAAC,EAAE,IAAI,EAAE,EAAE,CAAC,IAAI,EAAE,CAAC;kDACJ;IAGxB;QADC,QAAQ,CAAC,EAAE,IAAI,EAAE,EAAE,CAAC,IAAI,EAAE,CAAC;kDACJ;IAGxB;QADC,QAAQ;wDACiB;IAdT,aAAa;QADjC,OAAO;OACa,aAAa,CAyCjC;IAAD,oBAAC;CAzCD,AAyCC,CAzC0C,EAAE,CAAC,SAAS,GAyCtD;kBAzCoB,aAAa","file":"","sourceRoot":"/","sourcesContent":["import GoblinController from \"./GoblinController\"; // ✅ 放在最上面沒問題\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class GoblinSpawner extends cc.Component {\r\n    @property({ type: cc.Prefab })\r\n    goblinPrefab: cc.Prefab = null;\r\n\r\n    @property({ type: [cc.Node] })\r\n    dropPoints: cc.Node[] = [];\r\n\r\n    @property({ type: cc.Node })\r\n    player1: cc.Node = null;\r\n\r\n    @property({ type: cc.Node })\r\n    player2: cc.Node = null;\r\n\r\n    @property\r\n    spawnInterval: number = 5;\r\n\r\n    private timer: number = 0;\r\n\r\n    update(dt: number) {\r\n        this.timer += dt;\r\n        if (this.timer >= this.spawnInterval) {\r\n            this.timer = 0;\r\n            this.spawnGoblin();\r\n        }\r\n    }\r\n\r\n    spawnGoblin() {\r\n        if (!this.goblinPrefab || this.dropPoints.length === 0) return;\r\n\r\n        const index = Math.floor(Math.random() * this.dropPoints.length);\r\n        const dropPoint = this.dropPoints[index];\r\n\r\n        const goblin = cc.instantiate(this.goblinPrefab);\r\n        goblin.setPosition(dropPoint.getPosition());\r\n        goblin.parent = this.node;\r\n\r\n        const controller = goblin.getComponent(GoblinController);\r\n        if (controller && this.player1 && this.player2) {\r\n            controller.setTargetPlayers(this.player1, this.player2);\r\n        }\r\n    }\r\n}\r\n"]}